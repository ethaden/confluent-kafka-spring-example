---
x-common: &common
  restart: unless-stopped
  security_opt: 
    - no-new-privileges:true
  #cap_drop:
  #  - ALL

services:
  broker1:
    <<: *common
    image: confluentinc/cp-server:${CP_VERSION}
    hostname: broker1
    container_name: broker1
    networks:
      - kafka
    ports:
      - "9092:19092"
    healthcheck:
      test: kafka-broker-api-versions --bootstrap-server broker1:9092
      interval: 10s
      retries: 25
      start_period: 20s
    volumes:
      - data-kafka:/var/lib/kafka/data
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker1:9092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_HOSTNAME: broker1
      KAFKA_JMX_PORT: 10091
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker1:9093,2@broker2:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker1:9092,CONTROLLER://broker1:9093,PLAINTEXT_HOST://0.0.0.0:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_CONFLUENT_CLUSTER_LINK_ENABLE: "false"
      # BEGIN MAYBE REQUIRED
      #KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      #KAFKA_CONFLUENT_TELEMETRY_ENABLED: 'false'
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_CONFLUENT_BALANCER_ENABLE: "false"
      #CONFLUENT_METRICS_ENABLE: "false"
      # END MAYBE REQUIRED
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICA: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 12
      KAFKA_LOG_SEGMENT_BYTES: 1048576 #1Mb
      KAFKA_LOG_RETENTION_BYTES: 134217728 #128Mb
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "broker1:9092"

  broker2:
    <<: *common
    image: confluentinc/cp-server:${CP_VERSION}
    hostname: broker2
    container_name: broker2
    networks:
      - kafka
    # For simulating a network partitioning between the client and the cluster, comment out the next two (!) lines
    # Then restart the container by running "docker compose up -d"
    #ports:
    #  - "29092:29092"
    healthcheck:
      test: kafka-broker-api-versions --bootstrap-server broker2:9092
      interval: 10s
      retries: 25
      start_period: 20s
    volumes:
      - data-kafka-2:/var/lib/kafka/data
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker2:9092,PLAINTEXT_HOST://localhost:29092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_HOSTNAME: broker2
      KAFKA_JMX_PORT: 10091
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker1:9093,2@broker2:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker2:9092,CONTROLLER://broker2:9093,PLAINTEXT_HOST://0.0.0.0:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_CONFLUENT_CLUSTER_LINK_ENABLE: "false"
      # BEGIN MAYBE REQUIRED
      #KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      #KAFKA_CONFLUENT_TELEMETRY_ENABLED: 'false'
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_CONFLUENT_BALANCER_ENABLE: "false"
      #CONFLUENT_METRICS_ENABLE: "false"
      # END MAYBE REQUIRED
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICA: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 12
      KAFKA_LOG_SEGMENT_BYTES: 1048576 #1Mb
      KAFKA_LOG_RETENTION_BYTES: 134217728 #128Mb
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "broker1:9092"

  schema-registry:
    <<: *common
    image: confluentinc/cp-schema-registry:${CP_VERSION}
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker1
      - broker2
    networks:
      - kafka
    ports:
      - "8081:8081"
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider",  "http://localhost:8081" ]
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker1:9092,broker2:9092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      #SCHEMA_REGISTRY_RESOURCE_EXTENSION_CLASS: "io.confluent.kafka.schemaregistry.rulehandler.RuleSetResourceExtension"
      SCHEMA_REGISTRY_JMX_PORT: 10092
      SCHEMA_REGISTRY_JMX_HOSTNAME: schema-registry

networks:
  kafka:

volumes:
  data-kafka:
  data-kafka-2:
